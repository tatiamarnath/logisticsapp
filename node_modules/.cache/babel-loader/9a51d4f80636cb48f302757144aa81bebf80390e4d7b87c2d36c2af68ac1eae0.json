{"ast":null,"code":"var _jsxFileName = \"/Users/amarnatati/logistics-app/src/components/DriverList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport DriverCard from './DriverCard';\nimport './DriverList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DriverList = () => {\n  _s();\n  const [drivers, setDrivers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('/data/drivers.json').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      if (!Array.isArray(data)) {\n        throw new Error('Fetched data is not an array');\n      }\n      const updatedDrivers = data.map(driver => {\n        const totalMinutes = driver.activities.reduce((sum, activity) => sum + activity.duration, 0);\n        const activityTypes = driver.activities.reduce((acc, activity) => {\n          if (!acc[activity.type]) {\n            acc[activity.type] = 0;\n          }\n          acc[activity.type] += activity.duration;\n          return acc;\n        }, {});\n        const week = Array(7).fill(null).map((_, index) => ({\n          day: index + 1,\n          hasActivity: driver.activities.some(activity => new Date(activity.date).getDay() === index)\n        }));\n        return {\n          ...driver,\n          totalMinutes,\n          activityTypes,\n          week\n        };\n      });\n      setDrivers(updatedDrivers);\n    }).catch(error => {\n      console.error('Fetch error:', error);\n      setError(error.message);\n    });\n  }, []);\n  const filteredDrivers = drivers.filter(driver => driver.name.toLowerCase().includes(searchTerm.toLowerCase()) || driver.vehicle.registration.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"driver-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by name or registration\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"search-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : filteredDrivers.map(driver => /*#__PURE__*/_jsxDEV(DriverCard, {\n      driver: driver\n    }, driver.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(DriverList, \"PtiWu6bos4PRvOZFGJnuYLbHw3I=\");\n_c = DriverList;\nexport default DriverList;\nvar _c;\n$RefreshReg$(_c, \"DriverList\");","map":{"version":3,"names":["React","useEffect","useState","DriverCard","jsxDEV","_jsxDEV","DriverList","_s","drivers","setDrivers","searchTerm","setSearchTerm","error","setError","fetch","then","response","ok","Error","json","data","Array","isArray","updatedDrivers","map","driver","totalMinutes","activities","reduce","sum","activity","duration","activityTypes","acc","type","week","fill","_","index","day","hasActivity","some","Date","date","getDay","catch","console","message","filteredDrivers","filter","name","toLowerCase","includes","vehicle","registration","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/amarnatati/logistics-app/src/components/DriverList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DriverCard from './DriverCard';\nimport './DriverList.css';\n\nconst DriverList = () => {\n    const [drivers, setDrivers] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch('/data/drivers.json')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => {\n                if (!Array.isArray(data)) {\n                    throw new Error('Fetched data is not an array');\n                }\n                const updatedDrivers = data.map(driver => {\n                    const totalMinutes = driver.activities.reduce((sum, activity) => sum + activity.duration, 0);\n                    const activityTypes = driver.activities.reduce((acc, activity) => {\n                        if (!acc[activity.type]) {\n                            acc[activity.type] = 0;\n                        }\n                        acc[activity.type] += activity.duration;\n                        return acc;\n                    }, {});\n                    const week = Array(7).fill(null).map((_, index) => ({\n                        day: index + 1,\n                        hasActivity: driver.activities.some(activity => new Date(activity.date).getDay() === index)\n                    }));\n                    return { ...driver, totalMinutes, activityTypes, week };\n                });\n                setDrivers(updatedDrivers);\n            })\n            .catch(error => {\n                console.error('Fetch error:', error);\n                setError(error.message);\n            });\n    }, []);\n\n    const filteredDrivers = drivers.filter(driver =>\n        driver.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        driver.vehicle.registration.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    return (\n        <div className=\"driver-list\">\n            <input\n                type=\"text\"\n                placeholder=\"Search by name or registration\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"search-box\"\n            />\n            {error ? (\n                <p className=\"error\">{error}</p>\n            ) : (\n                filteredDrivers.map(driver => (\n                    <DriverCard key={driver.id} driver={driver} />\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default DriverList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}