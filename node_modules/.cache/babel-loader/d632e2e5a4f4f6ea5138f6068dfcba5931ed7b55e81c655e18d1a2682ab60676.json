{"ast":null,"code":"var _jsxFileName = \"/Users/amarnatati/logistics-app/src/components/DriverList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport DriverCard from './DriverCard';\nimport '../style/DriverList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DriverList = () => {\n  _s();\n  const [drivers, setDrivers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetch('/data/drivers.json').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      const updatedDrivers = data.map(driver => {\n        const totalMinutes = driver.activities.reduce((sum, activity) => sum + activity.duration, 0);\n        const activityTypes = driver.activities.reduce((acc, activity) => {\n          if (!acc[activity.type]) {\n            acc[activity.type] = 0;\n          }\n          acc[activity.type] += activity.duration;\n          return acc;\n        }, {});\n        const week = Array(7).fill(null).map((_, index) => ({\n          day: index + 1,\n          hasActivity: driver.activities.some(activity => new Date(activity.date).getDay() === index)\n        }));\n        return {\n          ...driver,\n          totalMinutes,\n          activityTypes,\n          week\n        };\n      });\n      setDrivers(updatedDrivers);\n    }).catch(error => console.error('Fetch error:', error));\n  }, []);\n  const filteredDrivers = drivers.filter(driver => driver.name.toLowerCase().includes(searchTerm.toLowerCase()) || driver.vehicle.registration.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"driver-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by name or registration\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"search-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), filteredDrivers.map(driver => /*#__PURE__*/_jsxDEV(DriverCard, {\n      driver: driver\n    }, driver.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(DriverList, \"uLh9S1dBB4tF9idvjRKQxuc5inM=\");\n_c = DriverList;\nexport default DriverList;\nvar _c;\n$RefreshReg$(_c, \"DriverList\");","map":{"version":3,"names":["React","useEffect","useState","DriverCard","jsxDEV","_jsxDEV","DriverList","_s","drivers","setDrivers","searchTerm","setSearchTerm","fetch","then","response","ok","Error","json","data","updatedDrivers","map","driver","totalMinutes","activities","reduce","sum","activity","duration","activityTypes","acc","type","week","Array","fill","_","index","day","hasActivity","some","Date","date","getDay","catch","error","console","filteredDrivers","filter","name","toLowerCase","includes","vehicle","registration","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/amarnatati/logistics-app/src/components/DriverList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DriverCard from './DriverCard';\nimport '../style/DriverList.css';\n\nconst DriverList = () => {\n    const [drivers, setDrivers] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n        fetch('/data/drivers.json')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => {\n                const updatedDrivers = data.map(driver => {\n                    const totalMinutes = driver.activities.reduce((sum, activity) => sum + activity.duration, 0);\n                    const activityTypes = driver.activities.reduce((acc, activity) => {\n                        if (!acc[activity.type]) {\n                            acc[activity.type] = 0;\n                        }\n                        acc[activity.type] += activity.duration;\n                        return acc;\n                    }, {});\n                    const week = Array(7).fill(null).map((_, index) => ({\n                        day: index + 1,\n                        hasActivity: driver.activities.some(activity => new Date(activity.date).getDay() === index)\n                    }));\n                    return { ...driver, totalMinutes, activityTypes, week };\n                });\n                setDrivers(updatedDrivers);\n            })\n            .catch(error => console.error('Fetch error:', error));\n    }, []);\n\n    const filteredDrivers = drivers.filter(driver =>\n        driver.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        driver.vehicle.registration.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    return (\n        <div className=\"driver-list\">\n            <input\n                type=\"text\"\n                placeholder=\"Search by name or registration\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"search-box\"\n            />\n            {filteredDrivers.map(driver => (\n                <DriverCard key={driver.id} driver={driver} />\n            ))}\n        </div>\n    );\n};\n\nexport default DriverList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}