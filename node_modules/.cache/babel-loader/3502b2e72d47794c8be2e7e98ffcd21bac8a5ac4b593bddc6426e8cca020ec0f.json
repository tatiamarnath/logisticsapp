{"ast":null,"code":"var _jsxFileName = \"/Users/amarnatati/logistics-app/src/components/DriverList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport driversData from '../data/drivers.json';\nimport DriverItem from './DriverItem';\nimport SearchBox from './SearchBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DriverList = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const filteredDrivers = driversData.filter(driver => driver.name.toLowerCase().includes(searchTerm.toLowerCase()) || driver.registration.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 2\n    }, this), filteredDrivers.map(driver => /*#__PURE__*/_jsxDEV(DriverItem, {\n      driver: driver\n    }, driver.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 2\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 2\n  }, this);\n};\n_s(DriverList, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = DriverList;\nexport default DriverList;\nvar _c;\n$RefreshReg$(_c, \"DriverList\");","map":{"version":3,"names":["React","useState","driversData","DriverItem","SearchBox","jsxDEV","_jsxDEV","DriverList","_s","searchTerm","setSearchTerm","filteredDrivers","filter","driver","name","toLowerCase","includes","registration","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/amarnatati/logistics-app/src/components/DriverList.js"],"sourcesContent":[" import React, { useState } from 'react';\n import driversData from '../data/drivers.json';\n import DriverItem from './DriverItem';\n import SearchBox from './SearchBox';\n\n const DriverList = () => {\n const [searchTerm, setSearchTerm] = useState('');\n\nconst filteredDrivers = driversData.filter(driver =>\n driver.name.toLowerCase().includes(searchTerm.toLowerCase())||\ndriver.registration.toLowerCase().includes(searchTerm.toLowerCase()));\n\n return (\n <div>\n <SearchBox setSearchTerm={setSearchTerm} />\n {filteredDrivers.map(driver => (\n <DriverItem key={driver.name} driver={driver} />\n ))}\n </div>\n );\n };\n\nexport default DriverList;\n"],"mappings":";;AAAC,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEjD,MAAMU,eAAe,GAAGT,WAAW,CAACU,MAAM,CAACC,MAAM,IAChDA,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,CAAC,CAAC,CAAC,IAC7DF,MAAM,CAACI,YAAY,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,CAAC,CAAC,CAAC,CAAC;EAEpE,oBACAT,OAAA;IAAAY,QAAA,gBACAZ,OAAA,CAACF,SAAS;MAACM,aAAa,EAAEA;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1CX,eAAe,CAACY,GAAG,CAACV,MAAM,iBAC3BP,OAAA,CAACH,UAAU;MAAmBU,MAAM,EAAEA;IAAO,GAA5BA,MAAM,CAACC,IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEN,CAAC;AAACd,EAAA,CAfID,UAAU;AAAAiB,EAAA,GAAVjB,UAAU;AAiBjB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}